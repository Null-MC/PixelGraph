<DataGrid x:Class="PixelGraph.UI.Controls.PropertyGridControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:convert="clr-namespace:PixelGraph.UI.Converters"
             xmlns:controls="clr-namespace:PixelGraph.UI.Controls"
             xmlns:propertyGrid="clr-namespace:PixelGraph.UI.Models.PropertyGrid"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             mc:Ignorable="d" d:DesignHeight="120" d:DesignWidth="240"
             AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" HeadersVisibility="None"
             PreparingCellForEdit="OnPreparingCellForEdit" PreviewKeyUp="OnPreviewKeyUp" RowStyle="{x:Null}"
             BeginningEdit="OnBeginningEdit" CellEditEnding="OnCellEditEnding" CurrentCellChanged="OnCurrentCellChanged">
    <DataGrid.Resources>
        <convert:NullableConverter x:Key="NullableConverter"/>
        <convert:VisibilityInverseConverter x:Key="InverseVisibilityConverter"/>
        <convert:DecimalToDoubleConverter x:Key="DecimalToDoubleConverter"/>
        <controls:PropertyGridCellTemplateSelector x:Key="DisplayCellTemplateSelector">
            <controls:PropertyGridCellTemplateSelector.TextBoxTemplate>
                <DataTemplate DataType="{x:Type propertyGrid:IEditTextPropertyRow}">
                    <TextBlock VerticalAlignment="Center"
                               Text="{Binding EditValue, Mode=OneWay}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource MahApps.Styles.TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsFileSelect, Mode=OneWay}">
                                        <Setter Property="HorizontalAlignment" Value="Right"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </DataTemplate>
            </controls:PropertyGridCellTemplateSelector.TextBoxTemplate>
            <controls:PropertyGridCellTemplateSelector.CheckBoxTemplate>
                <DataTemplate DataType="{x:Type propertyGrid:IEditBoolPropertyRow}">
                    <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center" IsEnabled="False"
                              IsChecked="{Binding EditValue, Mode=OneWay}"/>
                </DataTemplate>
            </controls:PropertyGridCellTemplateSelector.CheckBoxTemplate>
            <controls:PropertyGridCellTemplateSelector.ComboBoxTemplate>
                <DataTemplate DataType="{x:Type propertyGrid:IEditSelectPropertyRow}">
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center"
                               Text="{Binding EditDisplayValue, Mode=OneWay}"/>
                </DataTemplate>
            </controls:PropertyGridCellTemplateSelector.ComboBoxTemplate>
            <controls:PropertyGridCellTemplateSelector.SeparatorTemplate>
                <DataTemplate DataType="{x:Type propertyGrid:ISeparatorPropertyRow}">
                    <Rectangle Height="3" Fill="Black"/>
                </DataTemplate>
            </controls:PropertyGridCellTemplateSelector.SeparatorTemplate>
        </controls:PropertyGridCellTemplateSelector>
        <controls:PropertyGridEditCellTemplateSelector x:Key="EditCellTemplateSelector">
            <controls:PropertyGridEditCellTemplateSelector.TextBoxTemplate>
                <DataTemplate DataType="{x:Type propertyGrid:IEditTextPropertyRow}">
                    <DockPanel IsEnabled="{Binding Enabled, Mode=OneWay}">
                        <Slider DockPanel.Dock="Bottom" Orientation="Horizontal" Delay="200" Interval="200" SmallChange="0.01" LargeChange="0.1"
                                TickPlacement="None" IsMoveToPointEnabled="True">
                            <Slider.Style>
                                <Style TargetType="Slider" BasedOn="{StaticResource MahApps.Styles.Slider.Flat}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsNumericRange}" Value="True">
                                            <DataTrigger.Setters>
                                                <Setter Property="Value" Value="{Binding EditValue, Mode=TwoWay, Delay=200, Converter={StaticResource DecimalToDoubleConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                                                <Setter Property="Minimum" Value="{Binding RangeMin, Mode=OneWay}"/>
                                                <Setter Property="Maximum" Value="{Binding RangeMax, Mode=OneWay}"/>
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Slider.Style>
                        </Slider>
                        <mah:ColorPicker DockPanel.Dock="Top" TabIndex="1">
                            <mah:ColorPicker.Style>
                                <Style TargetType="mah:ColorPicker" BasedOn="{StaticResource MahApps.Styles.ColorPicker}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsColorSelect}" Value="True">
                                            <DataTrigger.Setters>
                                                <Setter Property="SelectedColor" Value="{Binding EditValue, Mode=TwoWay, Delay=200, UpdateSourceTrigger=PropertyChanged}"/>
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger.Setters>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </mah:ColorPicker.Style>
                        </mah:ColorPicker>
                        <Button DockPanel.Dock="Right" Margin="6,0" Click="OnSelectFileClick"
                                Style="{StaticResource MahApps.Styles.Button.Chromeless}"
                                Visibility="{Binding IsFileSelect, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <iconPacks:PackIconFontAwesome Kind="FileImportSolid"/>
                        </Button>
                        <TextBox HorizontalContentAlignment="Center" Margin="0" Padding="6,0" VerticalContentAlignment="Center" IsTabStop="False"
                                 BorderThickness="0" BorderBrush="{x:Null}" Background="Transparent"
                                 Text="{Binding EditValue, Mode=TwoWay, Converter={StaticResource NullableConverter}}"
                                 Visibility="{Binding IsColorSelect, Mode=OneWay, Converter={StaticResource InverseVisibilityConverter}}"/>
                    </DockPanel>
                </DataTemplate>
            </controls:PropertyGridEditCellTemplateSelector.TextBoxTemplate>
            <controls:PropertyGridEditCellTemplateSelector.CheckBoxTemplate>
                <DataTemplate DataType="{x:Type propertyGrid:IEditBoolPropertyRow}">
                    <CheckBox HorizontalAlignment="Center" Margin="0" Padding="6,0" VerticalAlignment="Center" IsTabStop="False"
                              IsEnabled="{Binding Enabled, Mode=OneWay}"
                              IsChecked="{Binding EditValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource NullableConverter}}"/>
                </DataTemplate>
            </controls:PropertyGridEditCellTemplateSelector.CheckBoxTemplate>
            <controls:PropertyGridEditCellTemplateSelector.ComboBoxTemplate>
                <DataTemplate DataType="{x:Type propertyGrid:IEditSelectPropertyRow}">
                    <ComboBox HorizontalContentAlignment="Center" Margin="0" Padding="6,0" IsTabStop="False"
                              BorderThickness="0" BorderBrush="{x:Null}" Background="Transparent"
                              IsEnabled="{Binding Enabled, Mode=OneWay}"
                              DisplayMemberPath="{Binding Options.DisplayMemberPath, Mode=OneWay}"
                              SelectedValuePath="{Binding Options.SelectedValuePath, Mode=OneWay}"
                              ItemsSource="{Binding Options.Items, Mode=OneWay}"
                              IsEditable="{Binding CanEditText, Mode=OneWay}">
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="ComboBoxItem" BasedOn="{StaticResource MahApps.Styles.ComboBoxItem}">
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            </Style>
                        </ComboBox.ItemContainerStyle>
                        <ComboBox.Style>
                            <Style TargetType="ComboBox" BasedOn="{StaticResource MahApps.Styles.ComboBox}">
                                <Setter Property="SelectedValue" Value="{Binding EditValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CanEditText, Mode=OneWay}" Value="True">
                                        <Setter Property="SelectedValue" Value="{x:Null}"/>
                                        <Setter Property="Text" Value="{Binding EditValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ComboBox.Style>
                    </ComboBox>
                </DataTemplate>
            </controls:PropertyGridEditCellTemplateSelector.ComboBoxTemplate>
            <controls:PropertyGridEditCellTemplateSelector.SeparatorTemplate>
                <DataTemplate DataType="{x:Type propertyGrid:ISeparatorPropertyRow}"/>
            </controls:PropertyGridEditCellTemplateSelector.SeparatorTemplate>
        </controls:PropertyGridEditCellTemplateSelector>
    </DataGrid.Resources>
    <DataGrid.RowStyleSelector>
        <controls:PropertyGridRowStyleSelector DefaultStyle="{StaticResource MahApps.Styles.DataGridRow}">
            <controls:PropertyGridRowStyleSelector.SeparatorStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="Height" Value="8"/>
                    <Setter Property="IsEnabled" Value="False"/>
                </Style>
            </controls:PropertyGridRowStyleSelector.SeparatorStyle>
        </controls:PropertyGridRowStyleSelector>
    </DataGrid.RowStyleSelector>
    <DataGrid.Columns>
        <DataGridTextColumn Width="Auto" IsReadOnly="True"
                            Foreground="{DynamicResource MahApps.Brushes.Gray4}"
                            Binding="{Binding Name, Mode=OneTime}"/>
        <DataGridTemplateColumn Width="*"
                                CellTemplateSelector="{StaticResource DisplayCellTemplateSelector}"
                                CellEditingTemplateSelector="{StaticResource EditCellTemplateSelector}">
            <DataGridTemplateColumn.CellStyle>
                <Style TargetType="DataGridCell" BasedOn="{StaticResource MahApps.Styles.DataGridCell}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ActualValue}" Value="{x:Null}">
                            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                            <Setter Property="FontStyle" Value="Italic"/>
                        </DataTrigger>
                        <Trigger Property="IsEditing" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}"/>
                            <Setter Property="FontStyle" Value="Normal"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGridTemplateColumn.CellStyle>
        </DataGridTemplateColumn>
    </DataGrid.Columns>
</DataGrid>
